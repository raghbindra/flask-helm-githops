# Default values for flask-redis-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: custom-flask-app
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v3

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  name: flask-redis-app
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: NodePort
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 5000
  targetPort: 5000

# My redis image config
redis:
  image: redis:6.2
  port: 6379
  storage: 1Gi

# ConfigMap values
config:
  HELLO_MSG: "Hello from Helmified Flask App WIN!"
  REDIS_HOST: "redis-service"

# sample secret file
secret:
  APP_PASSWORD: "YWRtaW4="

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: flask-helm.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: flask-tls
      hosts:
        - flask-helm.local

tls:
  enabled: true
  secretName: flask-tls
  crt: |
    -----BEGIN CERTIFICATE-----
    MIIDTTCCAjWgAwIBAgIUN5iddILvka8tHp/zzqEJoc9zrKswDQYJKoZIhvcNAQEL
    BQAwNjEZMBcGA1UEAwwQZmxhc2staGVsbS5sb2NhbDEZMBcGA1UECgwQZmxhc2st
    aGVsbS5sb2NhbDAeFw0yNTA4MjQwNDU0MDdaFw0yNjA4MjQwNDU0MDdaMDYxGTAX
    BgNVBAMMEGZsYXNrLWhlbG0ubG9jYWwxGTAXBgNVBAoMEGZsYXNrLWhlbG0ubG9j
    YWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDcHbQcZhZAEuT68AXB
    dQbjOyX2w8Zlz0QxTbs9GxDvMAB3HxD7avzVm7o1up5myic67uxppJX05RqUjaM8
    i10R+lP2Ce56Ax4MhulTc24ub6p5i2D+lK0IZXSgCJ2jMuEjDP0Yih3mzUXb/Alv
    BtGt7u41255+Q75Fo8XuCuVrVs79Hrj2IF85O/udbYj2Doi41glvjSg60MXNQ/iy
    6I/uwXy6nmV80e+PNcYCZQUbQbLz9K/omZW5xGVIJCQEbxfg/5LarrnsjDO1Aiy7
    tkbZ1zkBzHZKAROwWW9GGV51Vdt2ZRpVRpcvnEdYwVOAeC1yZUMa64ANbIbN5p0S
    /fRhAgMBAAGjUzBRMB0GA1UdDgQWBBTbEMcgADmEZ+cEsXjfWhmNNaMbYDAfBgNV
    HSMEGDAWgBTbEMcgADmEZ+cEsXjfWhmNNaMbYDAPBgNVHRMBAf8EBTADAQH/MA0G
    CSqGSIb3DQEBCwUAA4IBAQA648rxix6u/JJ3HAW/w/m2Y1W97XCtG00syLUBygoK
    baWm2WSzVP4lNGXhqH1Xt3xJEaGnxjCZuKHWEv82KqrfjPh0Zbp0Kas7WkKjdJWJ
    Tar04Jd1KEcYx0CYfSYwMYLovQkfC0FKPjlVMr6hzReBuiKwDJ78zPObhW1SKy7E
    vKy0wUDEeFjGwTuNBs6SkP2MUL/XDyeYZ5uX8+mqV6GdE8jaNqaBdP5dWhEdNmYD
    DLAowBIBZJSKf9gwlnUU2RIazK+mkdw7D2+YonKuIZ9ImfII4M/YmQtI6x6QEjy0
    Uosp6aEQ/zZpSKHTbJQVY98t1HqgWohJ2n5z4aWmXhzC
    -----END CERTIFICATE-----

  key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDcHbQcZhZAEuT6
    8AXBdQbjOyX2w8Zlz0QxTbs9GxDvMAB3HxD7avzVm7o1up5myic67uxppJX05RqU
    jaM8i10R+lP2Ce56Ax4MhulTc24ub6p5i2D+lK0IZXSgCJ2jMuEjDP0Yih3mzUXb
    /AlvBtGt7u41255+Q75Fo8XuCuVrVs79Hrj2IF85O/udbYj2Doi41glvjSg60MXN
    Q/iy6I/uwXy6nmV80e+PNcYCZQUbQbLz9K/omZW5xGVIJCQEbxfg/5LarrnsjDO1
    Aiy7tkbZ1zkBzHZKAROwWW9GGV51Vdt2ZRpVRpcvnEdYwVOAeC1yZUMa64ANbIbN
    5p0S/fRhAgMBAAECggEAH5lbCSWlpZKg0R5icSSL9dSArXVq9qQj2cEbM1k+m9vE
    AVXSIgm4nLCzsXFmOoLkUVtJ0JuqVGMMZw2TRMaL+J/7bCt+UwE+D9XRSqPcSinJ
    KxQ1ey6cTYOFE9FQ0gQkmlvLvLldNAw9bmh28TulH8dYZp5t2RoAB27MpBDn4Pnr
    xz86H+EEgIMVV+V9ausMS8Nw7POggsqUKuLZgZgAiXnxMafh4tHI0d0HBY9fcj1p
    01IkPdW7ZrmZEfOO0DDkJ1yb4l3dARkx2UovVxPbis3y+lvrvxaxRo1NAVpUwkic
    NvkuMhtbBkh+OJS0TbS2ckDy3ln3fAjWlCgfMuWnjQKBgQD8/l1/xvkTfdO8iIBn
    f3xZRPfwG5mruThkwFhOKYaZ3OBJ1BDjSvcNfMhiJ8fbppzpc8tP6FPUsQ2DvT6+
    RMtXJ9jJn2JTofjkHXomM6hdnoeGja++jtLLOCGEbUy6JbBdgSuwVGwtiS1YbgOX
    NLxdlKfkyaAS3eu5L1If5I5KlQKBgQDeu1IwYrg9pKg96YmUofci0068r+LSNrJi
    5tboYU1HJmBVa7sXXLaS+0vIJfK3oelgFsHU83NN4b4eIaaHKabU8Lia/Rbafkvp
    snRzeUtT88vj4tOGu3KgBnbaWLZFpNMaZMZyUKVEhl9a92xRrput756hl+OaknNu
    4W/Oi8qbnQKBgQDNY1/avVk2pr8/3v2HiKsV+fTjfDS8gekzeif2hKXewb9gkIaJ
    UDHTREuVzD/npZLbwAL9w1pTYM3c9sU6SLVf81x/CyMTTHq4Duo8m1GDd5EE/n//
    zwl4rAAh924D7VcKAjTKuS79pNEoamAF4G1P98B57+pBhuK4+57Lf4y5JQKBgQC0
    P+oiqDGsCU3yVMX3mB+1ekZVIw4vyv4QVfoDs4LjmqYJWxbcsDY8usu4XSWRAKIq
    FiClIqPkmlTOc7Md3VJbL7hmDX3qMp1isf3V2YphlYIimVVPyvDXmoOi7noL4HjK
    +lUy/BrTWt9eca+iZuksGShKY+5ZED4EtMJT6AN+bQKBgQDcGMf/m8ndhMv4Jo26
    8ys1sEz/HgYQTiheFdv9SLUlw3aue+uzZHWy+Q7xzv/iUCbWlz6vGqLp1YLM9bUr
    ejxG+zpSgK0xo5/61Y/0uj9zrE/j7BViN3XEvzdMG9h+DdKtfRHnc0N71MTM7JpM
    4PV5uJZ3aaTAB8+SVu/28mXZXQ==
    -----END PRIVATE KEY-----


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
