apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: flask-redis-ns
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
      labels:
        app: flask
    spec:
      containers:
      - name: flask
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        -  name: http
           containerPort: {{ .Values.service.port }}
           protocol: TCP
        env:
        - name: HELLO_MSG
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: HELLO_MSG
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: REDIS_HOST
        - name: APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: APP_PASSWORD



# apiVersion: v1
# kind: Service
# metadata:
#   name: flask-service
#   namespace: flask-redis-ns
# spec:
#   selector:
#     app: flask
#   ports:
#   - port: {{ .Values.service.port }}
#     targetPort: {{ .Values.service.port }}
#     {{- if eq .Values.service.type "NodePort" }}
#     nodePort: {{ .Values.service.nodePort }}
#     {{- end }}
#   type: {{ .Values.service.type }}
